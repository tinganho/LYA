// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LyaService.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "LyaService.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace Lya {
namespace ProtocolBuffers {
class PBAvailabilityRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBAvailabilityRequest> {
} _PBAvailabilityRequest_default_instance_;
class PBAvailabilityResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBAvailabilityResponse> {
} _PBAvailabilityResponse_default_instance_;
class PBSyncRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBSyncRequest> {
} _PBSyncRequest_default_instance_;
class PBSyncResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBSyncResponse> {
} _PBSyncResponse_default_instance_;
class PBFileToLocalizationsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBFileToLocalizations> {
} _PBFileToLocalizations_default_instance_;
class PBLocalizationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocalization> {
} _PBLocalization_default_instance_;
class PBParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBParam> {
} _PBParam_default_instance_;
class PBDiagnosticDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBDiagnostic> {
} _PBDiagnostic_default_instance_;
class PBLocationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PBLocation> {
} _PBLocation_default_instance_;

namespace protobuf_LyaService_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAvailabilityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBAvailabilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSyncRequest, functions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSyncRequest, files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSyncRequest, start_line_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSyncResponse, file_to_localizations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBSyncResponse, diagnostics_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFileToLocalizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFileToLocalizations, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBFileToLocalizations, localizations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocalization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocalization, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocalization, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocalization, parameters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocalization, location_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBParam, is_list_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBParam, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDiagnostic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDiagnostic, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBDiagnostic, location_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, column_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBLocation, position_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PBAvailabilityRequest)},
  { 5, -1, sizeof(PBAvailabilityResponse)},
  { 10, -1, sizeof(PBSyncRequest)},
  { 18, -1, sizeof(PBSyncResponse)},
  { 25, -1, sizeof(PBFileToLocalizations)},
  { 32, -1, sizeof(PBLocalization)},
  { 41, -1, sizeof(PBParam)},
  { 49, -1, sizeof(PBDiagnostic)},
  { 56, -1, sizeof(PBLocation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBAvailabilityRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBAvailabilityResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBSyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBFileToLocalizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocalization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBDiagnostic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBLocation_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "LyaService.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _PBAvailabilityRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PBAvailabilityResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PBSyncRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PBSyncResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _PBFileToLocalizations_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _PBLocalization_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _PBParam_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _PBDiagnostic_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _PBLocation_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PBAvailabilityRequest_default_instance_.DefaultConstruct();
  _PBAvailabilityResponse_default_instance_.DefaultConstruct();
  _PBSyncRequest_default_instance_.DefaultConstruct();
  _PBSyncResponse_default_instance_.DefaultConstruct();
  _PBFileToLocalizations_default_instance_.DefaultConstruct();
  _PBLocalization_default_instance_.DefaultConstruct();
  _PBParam_default_instance_.DefaultConstruct();
  _PBDiagnostic_default_instance_.DefaultConstruct();
  _PBLocation_default_instance_.DefaultConstruct();
  _PBLocalization_default_instance_.get_mutable()->location_ = const_cast< ::Lya::ProtocolBuffers::PBLocation*>(
      ::Lya::ProtocolBuffers::PBLocation::internal_default_instance());
  _PBDiagnostic_default_instance_.get_mutable()->location_ = const_cast< ::Lya::ProtocolBuffers::PBLocation*>(
      ::Lya::ProtocolBuffers::PBLocation::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020LyaService.proto\022\023Lya.ProtocolBuffers\""
      "\027\n\025PBAvailabilityRequest\"\030\n\026PBAvailabili"
      "tyResponse\"E\n\rPBSyncRequest\022\021\n\tfunctions"
      "\030\001 \003(\t\022\r\n\005files\030\002 \003(\t\022\022\n\nstart_line\030\003 \001("
      "\004\"\223\001\n\016PBSyncResponse\022I\n\025file_to_localiza"
      "tions\030\001 \003(\0132*.Lya.ProtocolBuffers.PBFile"
      "ToLocalizations\0226\n\013diagnostics\030\002 \003(\0132!.L"
      "ya.ProtocolBuffers.PBDiagnostic\"a\n\025PBFil"
      "eToLocalizations\022\014\n\004file\030\001 \001(\t\022:\n\rlocali"
      "zations\030\002 \003(\0132#.Lya.ProtocolBuffers.PBLo"
      "calization\"\217\001\n\016PBLocalization\022\n\n\002id\030\001 \001("
      "\t\022\014\n\004text\030\002 \001(\t\0220\n\nparameters\030\003 \003(\0132\034.Ly"
      "a.ProtocolBuffers.PBParam\0221\n\010location\030\004 "
      "\001(\0132\037.Lya.ProtocolBuffers.PBLocation\"6\n\007"
      "PBParam\022\014\n\004name\030\001 \001(\t\022\017\n\007is_list\030\002 \001(\010\022\014"
      "\n\004type\030\003 \001(\t\"R\n\014PBDiagnostic\022\017\n\007message\030"
      "\001 \001(\t\0221\n\010location\030\002 \001(\0132\037.Lya.ProtocolBu"
      "ffers.PBLocation\"L\n\nPBLocation\022\014\n\004line\030\001"
      " \001(\004\022\016\n\006column\030\002 \001(\004\022\016\n\006length\030\003 \001(\004\022\020\n\010"
      "position\030\004 \001(\0042\314\001\n\nLyaService\022O\n\004sync\022\"."
      "Lya.ProtocolBuffers.PBSyncRequest\032#.Lya."
      "ProtocolBuffers.PBSyncResponse\022m\n\022check_"
      "availability\022*.Lya.ProtocolBuffers.PBAva"
      "ilabilityRequest\032+.Lya.ProtocolBuffers.P"
      "BAvailabilityResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 989);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "LyaService.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_LyaService_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAvailabilityRequest::PBAvailabilityRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBAvailabilityRequest)
}
PBAvailabilityRequest::PBAvailabilityRequest(const PBAvailabilityRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBAvailabilityRequest)
}

void PBAvailabilityRequest::SharedCtor() {
  _cached_size_ = 0;
}

PBAvailabilityRequest::~PBAvailabilityRequest() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBAvailabilityRequest)
  SharedDtor();
}

void PBAvailabilityRequest::SharedDtor() {
}

void PBAvailabilityRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBAvailabilityRequest::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBAvailabilityRequest& PBAvailabilityRequest::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBAvailabilityRequest* PBAvailabilityRequest::New(::google::protobuf::Arena* arena) const {
  PBAvailabilityRequest* n = new PBAvailabilityRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBAvailabilityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
}

bool PBAvailabilityRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBAvailabilityRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBAvailabilityRequest)
  return false;
#undef DO_
}

void PBAvailabilityRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBAvailabilityRequest)
}

::google::protobuf::uint8* PBAvailabilityRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBAvailabilityRequest)
  return target;
}

size_t PBAvailabilityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBAvailabilityRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PBAvailabilityRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAvailabilityRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBAvailabilityRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBAvailabilityRequest)
    MergeFrom(*source);
  }
}

void PBAvailabilityRequest::MergeFrom(const PBAvailabilityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PBAvailabilityRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAvailabilityRequest::CopyFrom(const PBAvailabilityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBAvailabilityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBAvailabilityRequest::IsInitialized() const {
  return true;
}

void PBAvailabilityRequest::Swap(PBAvailabilityRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAvailabilityRequest::InternalSwap(PBAvailabilityRequest* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBAvailabilityRequest::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBAvailabilityRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBAvailabilityResponse::PBAvailabilityResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBAvailabilityResponse)
}
PBAvailabilityResponse::PBAvailabilityResponse(const PBAvailabilityResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBAvailabilityResponse)
}

void PBAvailabilityResponse::SharedCtor() {
  _cached_size_ = 0;
}

PBAvailabilityResponse::~PBAvailabilityResponse() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBAvailabilityResponse)
  SharedDtor();
}

void PBAvailabilityResponse::SharedDtor() {
}

void PBAvailabilityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBAvailabilityResponse::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBAvailabilityResponse& PBAvailabilityResponse::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBAvailabilityResponse* PBAvailabilityResponse::New(::google::protobuf::Arena* arena) const {
  PBAvailabilityResponse* n = new PBAvailabilityResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBAvailabilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
}

bool PBAvailabilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBAvailabilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBAvailabilityResponse)
  return false;
#undef DO_
}

void PBAvailabilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBAvailabilityResponse)
}

::google::protobuf::uint8* PBAvailabilityResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBAvailabilityResponse)
  return target;
}

size_t PBAvailabilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBAvailabilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PBAvailabilityResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBAvailabilityResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBAvailabilityResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBAvailabilityResponse)
    MergeFrom(*source);
  }
}

void PBAvailabilityResponse::MergeFrom(const PBAvailabilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PBAvailabilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBAvailabilityResponse::CopyFrom(const PBAvailabilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBAvailabilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBAvailabilityResponse::IsInitialized() const {
  return true;
}

void PBAvailabilityResponse::Swap(PBAvailabilityResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBAvailabilityResponse::InternalSwap(PBAvailabilityResponse* other) {
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBAvailabilityResponse::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBAvailabilityResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBSyncRequest::kFunctionsFieldNumber;
const int PBSyncRequest::kFilesFieldNumber;
const int PBSyncRequest::kStartLineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBSyncRequest::PBSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBSyncRequest)
}
PBSyncRequest::PBSyncRequest(const PBSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      functions_(from.functions_),
      files_(from.files_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_line_ = from.start_line_;
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBSyncRequest)
}

void PBSyncRequest::SharedCtor() {
  start_line_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

PBSyncRequest::~PBSyncRequest() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBSyncRequest)
  SharedDtor();
}

void PBSyncRequest::SharedDtor() {
}

void PBSyncRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSyncRequest::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBSyncRequest& PBSyncRequest::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBSyncRequest* PBSyncRequest::New(::google::protobuf::Arena* arena) const {
  PBSyncRequest* n = new PBSyncRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBSyncRequest)
  functions_.Clear();
  files_.Clear();
  start_line_ = GOOGLE_ULONGLONG(0);
}

bool PBSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBSyncRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string functions = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_functions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->functions(this->functions_size() - 1).data(),
            this->functions(this->functions_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBSyncRequest.functions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_files()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->files(this->files_size() - 1).data(),
            this->files(this->files_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBSyncRequest.files"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 start_line = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBSyncRequest)
  return false;
#undef DO_
}

void PBSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string functions = 1;
  for (int i = 0, n = this->functions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->functions(i).data(), this->functions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBSyncRequest.functions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->functions(i), output);
  }

  // repeated string files = 2;
  for (int i = 0, n = this->files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->files(i).data(), this->files(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBSyncRequest.files");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->files(i), output);
  }

  // uint64 start_line = 3;
  if (this->start_line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->start_line(), output);
  }

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBSyncRequest)
}

::google::protobuf::uint8* PBSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string functions = 1;
  for (int i = 0, n = this->functions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->functions(i).data(), this->functions(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBSyncRequest.functions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->functions(i), target);
  }

  // repeated string files = 2;
  for (int i = 0, n = this->files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->files(i).data(), this->files(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBSyncRequest.files");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->files(i), target);
  }

  // uint64 start_line = 3;
  if (this->start_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->start_line(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBSyncRequest)
  return target;
}

size_t PBSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBSyncRequest)
  size_t total_size = 0;

  // repeated string functions = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->functions_size());
  for (int i = 0, n = this->functions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->functions(i));
  }

  // repeated string files = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->files_size());
  for (int i = 0, n = this->files_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->files(i));
  }

  // uint64 start_line = 3;
  if (this->start_line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->start_line());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PBSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBSyncRequest)
    MergeFrom(*source);
  }
}

void PBSyncRequest::MergeFrom(const PBSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  functions_.MergeFrom(from.functions_);
  files_.MergeFrom(from.files_);
  if (from.start_line() != 0) {
    set_start_line(from.start_line());
  }
}

void PBSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSyncRequest::CopyFrom(const PBSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSyncRequest::IsInitialized() const {
  return true;
}

void PBSyncRequest::Swap(PBSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBSyncRequest::InternalSwap(PBSyncRequest* other) {
  functions_.InternalSwap(&other->functions_);
  files_.InternalSwap(&other->files_);
  std::swap(start_line_, other->start_line_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBSyncRequest::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBSyncRequest

// repeated string functions = 1;
int PBSyncRequest::functions_size() const {
  return functions_.size();
}
void PBSyncRequest::clear_functions() {
  functions_.Clear();
}
const ::std::string& PBSyncRequest::functions(int index) const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBSyncRequest.functions)
  return functions_.Get(index);
}
::std::string* PBSyncRequest::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBSyncRequest.functions)
  return functions_.Mutable(index);
}
void PBSyncRequest::set_functions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBSyncRequest.functions)
  functions_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void PBSyncRequest::set_functions(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBSyncRequest.functions)
  functions_.Mutable(index)->assign(std::move(value));
}
#endif
void PBSyncRequest::set_functions(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBSyncRequest.functions)
}
void PBSyncRequest::set_functions(int index, const char* value, size_t size) {
  functions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBSyncRequest.functions)
}
::std::string* PBSyncRequest::add_functions() {
  // @@protoc_insertion_point(field_add_mutable:Lya.ProtocolBuffers.PBSyncRequest.functions)
  return functions_.Add();
}
void PBSyncRequest::add_functions(const ::std::string& value) {
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBSyncRequest.functions)
}
#if LANG_CXX11
void PBSyncRequest::add_functions(::std::string&& value) {
  functions_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBSyncRequest.functions)
}
#endif
void PBSyncRequest::add_functions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  functions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Lya.ProtocolBuffers.PBSyncRequest.functions)
}
void PBSyncRequest::add_functions(const char* value, size_t size) {
  functions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Lya.ProtocolBuffers.PBSyncRequest.functions)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBSyncRequest::functions() const {
  // @@protoc_insertion_point(field_list:Lya.ProtocolBuffers.PBSyncRequest.functions)
  return functions_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PBSyncRequest::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:Lya.ProtocolBuffers.PBSyncRequest.functions)
  return &functions_;
}

// repeated string files = 2;
int PBSyncRequest::files_size() const {
  return files_.size();
}
void PBSyncRequest::clear_files() {
  files_.Clear();
}
const ::std::string& PBSyncRequest::files(int index) const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBSyncRequest.files)
  return files_.Get(index);
}
::std::string* PBSyncRequest::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBSyncRequest.files)
  return files_.Mutable(index);
}
void PBSyncRequest::set_files(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBSyncRequest.files)
  files_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void PBSyncRequest::set_files(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBSyncRequest.files)
  files_.Mutable(index)->assign(std::move(value));
}
#endif
void PBSyncRequest::set_files(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  files_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBSyncRequest.files)
}
void PBSyncRequest::set_files(int index, const char* value, size_t size) {
  files_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBSyncRequest.files)
}
::std::string* PBSyncRequest::add_files() {
  // @@protoc_insertion_point(field_add_mutable:Lya.ProtocolBuffers.PBSyncRequest.files)
  return files_.Add();
}
void PBSyncRequest::add_files(const ::std::string& value) {
  files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBSyncRequest.files)
}
#if LANG_CXX11
void PBSyncRequest::add_files(::std::string&& value) {
  files_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBSyncRequest.files)
}
#endif
void PBSyncRequest::add_files(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Lya.ProtocolBuffers.PBSyncRequest.files)
}
void PBSyncRequest::add_files(const char* value, size_t size) {
  files_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Lya.ProtocolBuffers.PBSyncRequest.files)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
PBSyncRequest::files() const {
  // @@protoc_insertion_point(field_list:Lya.ProtocolBuffers.PBSyncRequest.files)
  return files_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
PBSyncRequest::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:Lya.ProtocolBuffers.PBSyncRequest.files)
  return &files_;
}

// uint64 start_line = 3;
void PBSyncRequest::clear_start_line() {
  start_line_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBSyncRequest::start_line() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBSyncRequest.start_line)
  return start_line_;
}
void PBSyncRequest::set_start_line(::google::protobuf::uint64 value) {
  
  start_line_ = value;
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBSyncRequest.start_line)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBSyncResponse::kFileToLocalizationsFieldNumber;
const int PBSyncResponse::kDiagnosticsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBSyncResponse::PBSyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBSyncResponse)
}
PBSyncResponse::PBSyncResponse(const PBSyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      file_to_localizations_(from.file_to_localizations_),
      diagnostics_(from.diagnostics_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBSyncResponse)
}

void PBSyncResponse::SharedCtor() {
  _cached_size_ = 0;
}

PBSyncResponse::~PBSyncResponse() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBSyncResponse)
  SharedDtor();
}

void PBSyncResponse::SharedDtor() {
}

void PBSyncResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBSyncResponse::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBSyncResponse& PBSyncResponse::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBSyncResponse* PBSyncResponse::New(::google::protobuf::Arena* arena) const {
  PBSyncResponse* n = new PBSyncResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBSyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBSyncResponse)
  file_to_localizations_.Clear();
  diagnostics_.Clear();
}

bool PBSyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBSyncResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Lya.ProtocolBuffers.PBFileToLocalizations file_to_localizations = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_file_to_localizations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lya.ProtocolBuffers.PBDiagnostic diagnostics = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_diagnostics()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBSyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBSyncResponse)
  return false;
#undef DO_
}

void PBSyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Lya.ProtocolBuffers.PBFileToLocalizations file_to_localizations = 1;
  for (unsigned int i = 0, n = this->file_to_localizations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->file_to_localizations(i), output);
  }

  // repeated .Lya.ProtocolBuffers.PBDiagnostic diagnostics = 2;
  for (unsigned int i = 0, n = this->diagnostics_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->diagnostics(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBSyncResponse)
}

::google::protobuf::uint8* PBSyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Lya.ProtocolBuffers.PBFileToLocalizations file_to_localizations = 1;
  for (unsigned int i = 0, n = this->file_to_localizations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->file_to_localizations(i), deterministic, target);
  }

  // repeated .Lya.ProtocolBuffers.PBDiagnostic diagnostics = 2;
  for (unsigned int i = 0, n = this->diagnostics_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->diagnostics(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBSyncResponse)
  return target;
}

size_t PBSyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBSyncResponse)
  size_t total_size = 0;

  // repeated .Lya.ProtocolBuffers.PBFileToLocalizations file_to_localizations = 1;
  {
    unsigned int count = this->file_to_localizations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->file_to_localizations(i));
    }
  }

  // repeated .Lya.ProtocolBuffers.PBDiagnostic diagnostics = 2;
  {
    unsigned int count = this->diagnostics_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->diagnostics(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBSyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PBSyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBSyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBSyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBSyncResponse)
    MergeFrom(*source);
  }
}

void PBSyncResponse::MergeFrom(const PBSyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  file_to_localizations_.MergeFrom(from.file_to_localizations_);
  diagnostics_.MergeFrom(from.diagnostics_);
}

void PBSyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBSyncResponse::CopyFrom(const PBSyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBSyncResponse::IsInitialized() const {
  return true;
}

void PBSyncResponse::Swap(PBSyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBSyncResponse::InternalSwap(PBSyncResponse* other) {
  file_to_localizations_.InternalSwap(&other->file_to_localizations_);
  diagnostics_.InternalSwap(&other->diagnostics_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBSyncResponse::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBSyncResponse

// repeated .Lya.ProtocolBuffers.PBFileToLocalizations file_to_localizations = 1;
int PBSyncResponse::file_to_localizations_size() const {
  return file_to_localizations_.size();
}
void PBSyncResponse::clear_file_to_localizations() {
  file_to_localizations_.Clear();
}
const ::Lya::ProtocolBuffers::PBFileToLocalizations& PBSyncResponse::file_to_localizations(int index) const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBSyncResponse.file_to_localizations)
  return file_to_localizations_.Get(index);
}
::Lya::ProtocolBuffers::PBFileToLocalizations* PBSyncResponse::mutable_file_to_localizations(int index) {
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBSyncResponse.file_to_localizations)
  return file_to_localizations_.Mutable(index);
}
::Lya::ProtocolBuffers::PBFileToLocalizations* PBSyncResponse::add_file_to_localizations() {
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBSyncResponse.file_to_localizations)
  return file_to_localizations_.Add();
}
::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBFileToLocalizations >*
PBSyncResponse::mutable_file_to_localizations() {
  // @@protoc_insertion_point(field_mutable_list:Lya.ProtocolBuffers.PBSyncResponse.file_to_localizations)
  return &file_to_localizations_;
}
const ::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBFileToLocalizations >&
PBSyncResponse::file_to_localizations() const {
  // @@protoc_insertion_point(field_list:Lya.ProtocolBuffers.PBSyncResponse.file_to_localizations)
  return file_to_localizations_;
}

// repeated .Lya.ProtocolBuffers.PBDiagnostic diagnostics = 2;
int PBSyncResponse::diagnostics_size() const {
  return diagnostics_.size();
}
void PBSyncResponse::clear_diagnostics() {
  diagnostics_.Clear();
}
const ::Lya::ProtocolBuffers::PBDiagnostic& PBSyncResponse::diagnostics(int index) const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBSyncResponse.diagnostics)
  return diagnostics_.Get(index);
}
::Lya::ProtocolBuffers::PBDiagnostic* PBSyncResponse::mutable_diagnostics(int index) {
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBSyncResponse.diagnostics)
  return diagnostics_.Mutable(index);
}
::Lya::ProtocolBuffers::PBDiagnostic* PBSyncResponse::add_diagnostics() {
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBSyncResponse.diagnostics)
  return diagnostics_.Add();
}
::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBDiagnostic >*
PBSyncResponse::mutable_diagnostics() {
  // @@protoc_insertion_point(field_mutable_list:Lya.ProtocolBuffers.PBSyncResponse.diagnostics)
  return &diagnostics_;
}
const ::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBDiagnostic >&
PBSyncResponse::diagnostics() const {
  // @@protoc_insertion_point(field_list:Lya.ProtocolBuffers.PBSyncResponse.diagnostics)
  return diagnostics_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBFileToLocalizations::kFileFieldNumber;
const int PBFileToLocalizations::kLocalizationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBFileToLocalizations::PBFileToLocalizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBFileToLocalizations)
}
PBFileToLocalizations::PBFileToLocalizations(const PBFileToLocalizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      localizations_(from.localizations_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBFileToLocalizations)
}

void PBFileToLocalizations::SharedCtor() {
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PBFileToLocalizations::~PBFileToLocalizations() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBFileToLocalizations)
  SharedDtor();
}

void PBFileToLocalizations::SharedDtor() {
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBFileToLocalizations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBFileToLocalizations::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBFileToLocalizations& PBFileToLocalizations::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBFileToLocalizations* PBFileToLocalizations::New(::google::protobuf::Arena* arena) const {
  PBFileToLocalizations* n = new PBFileToLocalizations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBFileToLocalizations::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  localizations_.Clear();
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PBFileToLocalizations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), this->file().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBFileToLocalizations.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lya.ProtocolBuffers.PBLocalization localizations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_localizations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBFileToLocalizations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBFileToLocalizations)
  return false;
#undef DO_
}

void PBFileToLocalizations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBFileToLocalizations.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file(), output);
  }

  // repeated .Lya.ProtocolBuffers.PBLocalization localizations = 2;
  for (unsigned int i = 0, n = this->localizations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->localizations(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBFileToLocalizations)
}

::google::protobuf::uint8* PBFileToLocalizations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string file = 1;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), this->file().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBFileToLocalizations.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file(), target);
  }

  // repeated .Lya.ProtocolBuffers.PBLocalization localizations = 2;
  for (unsigned int i = 0, n = this->localizations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->localizations(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBFileToLocalizations)
  return target;
}

size_t PBFileToLocalizations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  size_t total_size = 0;

  // repeated .Lya.ProtocolBuffers.PBLocalization localizations = 2;
  {
    unsigned int count = this->localizations_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->localizations(i));
    }
  }

  // string file = 1;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBFileToLocalizations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  GOOGLE_DCHECK_NE(&from, this);
  const PBFileToLocalizations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBFileToLocalizations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBFileToLocalizations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBFileToLocalizations)
    MergeFrom(*source);
  }
}

void PBFileToLocalizations::MergeFrom(const PBFileToLocalizations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  localizations_.MergeFrom(from.localizations_);
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
}

void PBFileToLocalizations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBFileToLocalizations::CopyFrom(const PBFileToLocalizations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBFileToLocalizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBFileToLocalizations::IsInitialized() const {
  return true;
}

void PBFileToLocalizations::Swap(PBFileToLocalizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBFileToLocalizations::InternalSwap(PBFileToLocalizations* other) {
  localizations_.InternalSwap(&other->localizations_);
  file_.Swap(&other->file_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBFileToLocalizations::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBFileToLocalizations

// string file = 1;
void PBFileToLocalizations::clear_file() {
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBFileToLocalizations::file() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBFileToLocalizations.file)
  return file_.GetNoArena();
}
void PBFileToLocalizations::set_file(const ::std::string& value) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBFileToLocalizations.file)
}
#if LANG_CXX11
void PBFileToLocalizations::set_file(::std::string&& value) {
  
  file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lya.ProtocolBuffers.PBFileToLocalizations.file)
}
#endif
void PBFileToLocalizations::set_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBFileToLocalizations.file)
}
void PBFileToLocalizations::set_file(const char* value, size_t size) {
  
  file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBFileToLocalizations.file)
}
::std::string* PBFileToLocalizations::mutable_file() {
  
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBFileToLocalizations.file)
  return file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBFileToLocalizations::release_file() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBFileToLocalizations.file)
  
  return file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBFileToLocalizations::set_allocated_file(::std::string* file) {
  if (file != NULL) {
    
  } else {
    
  }
  file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file);
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBFileToLocalizations.file)
}

// repeated .Lya.ProtocolBuffers.PBLocalization localizations = 2;
int PBFileToLocalizations::localizations_size() const {
  return localizations_.size();
}
void PBFileToLocalizations::clear_localizations() {
  localizations_.Clear();
}
const ::Lya::ProtocolBuffers::PBLocalization& PBFileToLocalizations::localizations(int index) const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBFileToLocalizations.localizations)
  return localizations_.Get(index);
}
::Lya::ProtocolBuffers::PBLocalization* PBFileToLocalizations::mutable_localizations(int index) {
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBFileToLocalizations.localizations)
  return localizations_.Mutable(index);
}
::Lya::ProtocolBuffers::PBLocalization* PBFileToLocalizations::add_localizations() {
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBFileToLocalizations.localizations)
  return localizations_.Add();
}
::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBLocalization >*
PBFileToLocalizations::mutable_localizations() {
  // @@protoc_insertion_point(field_mutable_list:Lya.ProtocolBuffers.PBFileToLocalizations.localizations)
  return &localizations_;
}
const ::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBLocalization >&
PBFileToLocalizations::localizations() const {
  // @@protoc_insertion_point(field_list:Lya.ProtocolBuffers.PBFileToLocalizations.localizations)
  return localizations_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocalization::kIdFieldNumber;
const int PBLocalization::kTextFieldNumber;
const int PBLocalization::kParametersFieldNumber;
const int PBLocalization::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocalization::PBLocalization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBLocalization)
}
PBLocalization::PBLocalization(const PBLocalization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parameters_(from.parameters_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_location()) {
    location_ = new ::Lya::ProtocolBuffers::PBLocation(*from.location_);
  } else {
    location_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBLocalization)
}

void PBLocalization::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = NULL;
  _cached_size_ = 0;
}

PBLocalization::~PBLocalization() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBLocalization)
  SharedDtor();
}

void PBLocalization::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete location_;
  }
}

void PBLocalization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocalization::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocalization& PBLocalization::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocalization* PBLocalization::New(::google::protobuf::Arena* arena) const {
  PBLocalization* n = new PBLocalization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocalization::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBLocalization)
  parameters_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}

bool PBLocalization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBLocalization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBLocalization.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBLocalization.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Lya.ProtocolBuffers.PBParam parameters = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lya.ProtocolBuffers.PBLocation location = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBLocalization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBLocalization)
  return false;
#undef DO_
}

void PBLocalization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBLocalization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBLocalization.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBLocalization.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // repeated .Lya.ProtocolBuffers.PBParam parameters = 3;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->parameters(i), output);
  }

  // .Lya.ProtocolBuffers.PBLocation location = 4;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->location_, output);
  }

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBLocalization)
}

::google::protobuf::uint8* PBLocalization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBLocalization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBLocalization.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBLocalization.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // repeated .Lya.ProtocolBuffers.PBParam parameters = 3;
  for (unsigned int i = 0, n = this->parameters_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->parameters(i), deterministic, target);
  }

  // .Lya.ProtocolBuffers.PBLocation location = 4;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->location_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBLocalization)
  return target;
}

size_t PBLocalization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBLocalization)
  size_t total_size = 0;

  // repeated .Lya.ProtocolBuffers.PBParam parameters = 3;
  {
    unsigned int count = this->parameters_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parameters(i));
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .Lya.ProtocolBuffers.PBLocation location = 4;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->location_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocalization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBLocalization)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocalization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocalization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBLocalization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBLocalization)
    MergeFrom(*source);
  }
}

void PBLocalization::MergeFrom(const PBLocalization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBLocalization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_location()) {
    mutable_location()->::Lya::ProtocolBuffers::PBLocation::MergeFrom(from.location());
  }
}

void PBLocalization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBLocalization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocalization::CopyFrom(const PBLocalization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBLocalization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocalization::IsInitialized() const {
  return true;
}

void PBLocalization::Swap(PBLocalization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocalization::InternalSwap(PBLocalization* other) {
  parameters_.InternalSwap(&other->parameters_);
  id_.Swap(&other->id_);
  text_.Swap(&other->text_);
  std::swap(location_, other->location_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocalization::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocalization

// string id = 1;
void PBLocalization::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBLocalization::id() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocalization.id)
  return id_.GetNoArena();
}
void PBLocalization::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBLocalization.id)
}
#if LANG_CXX11
void PBLocalization::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lya.ProtocolBuffers.PBLocalization.id)
}
#endif
void PBLocalization::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBLocalization.id)
}
void PBLocalization::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBLocalization.id)
}
::std::string* PBLocalization::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBLocalization.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLocalization::release_id() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBLocalization.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLocalization::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBLocalization.id)
}

// string text = 2;
void PBLocalization::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBLocalization::text() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocalization.text)
  return text_.GetNoArena();
}
void PBLocalization::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBLocalization.text)
}
#if LANG_CXX11
void PBLocalization::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lya.ProtocolBuffers.PBLocalization.text)
}
#endif
void PBLocalization::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBLocalization.text)
}
void PBLocalization::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBLocalization.text)
}
::std::string* PBLocalization::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBLocalization.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBLocalization::release_text() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBLocalization.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBLocalization::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBLocalization.text)
}

// repeated .Lya.ProtocolBuffers.PBParam parameters = 3;
int PBLocalization::parameters_size() const {
  return parameters_.size();
}
void PBLocalization::clear_parameters() {
  parameters_.Clear();
}
const ::Lya::ProtocolBuffers::PBParam& PBLocalization::parameters(int index) const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocalization.parameters)
  return parameters_.Get(index);
}
::Lya::ProtocolBuffers::PBParam* PBLocalization::mutable_parameters(int index) {
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBLocalization.parameters)
  return parameters_.Mutable(index);
}
::Lya::ProtocolBuffers::PBParam* PBLocalization::add_parameters() {
  // @@protoc_insertion_point(field_add:Lya.ProtocolBuffers.PBLocalization.parameters)
  return parameters_.Add();
}
::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBParam >*
PBLocalization::mutable_parameters() {
  // @@protoc_insertion_point(field_mutable_list:Lya.ProtocolBuffers.PBLocalization.parameters)
  return &parameters_;
}
const ::google::protobuf::RepeatedPtrField< ::Lya::ProtocolBuffers::PBParam >&
PBLocalization::parameters() const {
  // @@protoc_insertion_point(field_list:Lya.ProtocolBuffers.PBLocalization.parameters)
  return parameters_;
}

// .Lya.ProtocolBuffers.PBLocation location = 4;
bool PBLocalization::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void PBLocalization::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::Lya::ProtocolBuffers::PBLocation& PBLocalization::location() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocalization.location)
  return location_ != NULL ? *location_
                         : *::Lya::ProtocolBuffers::PBLocation::internal_default_instance();
}
::Lya::ProtocolBuffers::PBLocation* PBLocalization::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::Lya::ProtocolBuffers::PBLocation;
  }
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBLocalization.location)
  return location_;
}
::Lya::ProtocolBuffers::PBLocation* PBLocalization::release_location() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBLocalization.location)
  
  ::Lya::ProtocolBuffers::PBLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void PBLocalization::set_allocated_location(::Lya::ProtocolBuffers::PBLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBLocalization.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBParam::kNameFieldNumber;
const int PBParam::kIsListFieldNumber;
const int PBParam::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBParam::PBParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBParam)
}
PBParam::PBParam(const PBParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  is_list_ = from.is_list_;
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBParam)
}

void PBParam::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_list_ = false;
  _cached_size_ = 0;
}

PBParam::~PBParam() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBParam)
  SharedDtor();
}

void PBParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBParam::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBParam& PBParam::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBParam* PBParam::New(::google::protobuf::Arena* arena) const {
  PBParam* n = new PBParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBParam::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBParam)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_list_ = false;
}

bool PBParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBParam.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_list = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_list_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBParam.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBParam)
  return false;
#undef DO_
}

void PBParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bool is_list = 2;
  if (this->is_list() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_list(), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBParam.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBParam)
}

::google::protobuf::uint8* PBParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bool is_list = 2;
  if (this->is_list() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_list(), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBParam.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBParam)
  return target;
}

size_t PBParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBParam)
  size_t total_size = 0;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bool is_list = 2;
  if (this->is_list() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PBParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBParam)
    MergeFrom(*source);
  }
}

void PBParam::MergeFrom(const PBParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.is_list() != 0) {
    set_is_list(from.is_list());
  }
}

void PBParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBParam::CopyFrom(const PBParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBParam::IsInitialized() const {
  return true;
}

void PBParam::Swap(PBParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBParam::InternalSwap(PBParam* other) {
  name_.Swap(&other->name_);
  type_.Swap(&other->type_);
  std::swap(is_list_, other->is_list_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBParam::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBParam

// string name = 1;
void PBParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBParam::name() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBParam.name)
  return name_.GetNoArena();
}
void PBParam::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBParam.name)
}
#if LANG_CXX11
void PBParam::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lya.ProtocolBuffers.PBParam.name)
}
#endif
void PBParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBParam.name)
}
void PBParam::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBParam.name)
}
::std::string* PBParam::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBParam::release_name() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBParam.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBParam.name)
}

// bool is_list = 2;
void PBParam::clear_is_list() {
  is_list_ = false;
}
bool PBParam::is_list() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBParam.is_list)
  return is_list_;
}
void PBParam::set_is_list(bool value) {
  
  is_list_ = value;
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBParam.is_list)
}

// string type = 3;
void PBParam::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBParam::type() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBParam.type)
  return type_.GetNoArena();
}
void PBParam::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBParam.type)
}
#if LANG_CXX11
void PBParam::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lya.ProtocolBuffers.PBParam.type)
}
#endif
void PBParam::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBParam.type)
}
void PBParam::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBParam.type)
}
::std::string* PBParam::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBParam.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBParam::release_type() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBParam.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBParam::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBParam.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBDiagnostic::kMessageFieldNumber;
const int PBDiagnostic::kLocationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBDiagnostic::PBDiagnostic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBDiagnostic)
}
PBDiagnostic::PBDiagnostic(const PBDiagnostic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_location()) {
    location_ = new ::Lya::ProtocolBuffers::PBLocation(*from.location_);
  } else {
    location_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBDiagnostic)
}

void PBDiagnostic::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  location_ = NULL;
  _cached_size_ = 0;
}

PBDiagnostic::~PBDiagnostic() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBDiagnostic)
  SharedDtor();
}

void PBDiagnostic::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete location_;
  }
}

void PBDiagnostic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBDiagnostic::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBDiagnostic& PBDiagnostic::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBDiagnostic* PBDiagnostic::New(::google::protobuf::Arena* arena) const {
  PBDiagnostic* n = new PBDiagnostic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBDiagnostic::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBDiagnostic)
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && location_ != NULL) {
    delete location_;
  }
  location_ = NULL;
}

bool PBDiagnostic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBDiagnostic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Lya.ProtocolBuffers.PBDiagnostic.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Lya.ProtocolBuffers.PBLocation location = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_location()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBDiagnostic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBDiagnostic)
  return false;
#undef DO_
}

void PBDiagnostic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBDiagnostic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBDiagnostic.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // .Lya.ProtocolBuffers.PBLocation location = 2;
  if (this->has_location()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->location_, output);
  }

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBDiagnostic)
}

::google::protobuf::uint8* PBDiagnostic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBDiagnostic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Lya.ProtocolBuffers.PBDiagnostic.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // .Lya.ProtocolBuffers.PBLocation location = 2;
  if (this->has_location()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->location_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBDiagnostic)
  return target;
}

size_t PBDiagnostic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBDiagnostic)
  size_t total_size = 0;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // .Lya.ProtocolBuffers.PBLocation location = 2;
  if (this->has_location()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->location_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBDiagnostic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBDiagnostic)
  GOOGLE_DCHECK_NE(&from, this);
  const PBDiagnostic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBDiagnostic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBDiagnostic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBDiagnostic)
    MergeFrom(*source);
  }
}

void PBDiagnostic::MergeFrom(const PBDiagnostic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBDiagnostic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.has_location()) {
    mutable_location()->::Lya::ProtocolBuffers::PBLocation::MergeFrom(from.location());
  }
}

void PBDiagnostic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBDiagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBDiagnostic::CopyFrom(const PBDiagnostic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBDiagnostic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBDiagnostic::IsInitialized() const {
  return true;
}

void PBDiagnostic::Swap(PBDiagnostic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBDiagnostic::InternalSwap(PBDiagnostic* other) {
  message_.Swap(&other->message_);
  std::swap(location_, other->location_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBDiagnostic::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBDiagnostic

// string message = 1;
void PBDiagnostic::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBDiagnostic::message() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBDiagnostic.message)
  return message_.GetNoArena();
}
void PBDiagnostic::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBDiagnostic.message)
}
#if LANG_CXX11
void PBDiagnostic::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Lya.ProtocolBuffers.PBDiagnostic.message)
}
#endif
void PBDiagnostic::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Lya.ProtocolBuffers.PBDiagnostic.message)
}
void PBDiagnostic::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Lya.ProtocolBuffers.PBDiagnostic.message)
}
::std::string* PBDiagnostic::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBDiagnostic.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBDiagnostic::release_message() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBDiagnostic.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBDiagnostic::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBDiagnostic.message)
}

// .Lya.ProtocolBuffers.PBLocation location = 2;
bool PBDiagnostic::has_location() const {
  return this != internal_default_instance() && location_ != NULL;
}
void PBDiagnostic::clear_location() {
  if (GetArenaNoVirtual() == NULL && location_ != NULL) delete location_;
  location_ = NULL;
}
const ::Lya::ProtocolBuffers::PBLocation& PBDiagnostic::location() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBDiagnostic.location)
  return location_ != NULL ? *location_
                         : *::Lya::ProtocolBuffers::PBLocation::internal_default_instance();
}
::Lya::ProtocolBuffers::PBLocation* PBDiagnostic::mutable_location() {
  
  if (location_ == NULL) {
    location_ = new ::Lya::ProtocolBuffers::PBLocation;
  }
  // @@protoc_insertion_point(field_mutable:Lya.ProtocolBuffers.PBDiagnostic.location)
  return location_;
}
::Lya::ProtocolBuffers::PBLocation* PBDiagnostic::release_location() {
  // @@protoc_insertion_point(field_release:Lya.ProtocolBuffers.PBDiagnostic.location)
  
  ::Lya::ProtocolBuffers::PBLocation* temp = location_;
  location_ = NULL;
  return temp;
}
void PBDiagnostic::set_allocated_location(::Lya::ProtocolBuffers::PBLocation* location) {
  delete location_;
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Lya.ProtocolBuffers.PBDiagnostic.location)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBLocation::kLineFieldNumber;
const int PBLocation::kColumnFieldNumber;
const int PBLocation::kLengthFieldNumber;
const int PBLocation::kPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBLocation::PBLocation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_LyaService_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Lya.ProtocolBuffers.PBLocation)
}
PBLocation::PBLocation(const PBLocation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&line_, &from.line_,
    reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&line_) + sizeof(position_));
  // @@protoc_insertion_point(copy_constructor:Lya.ProtocolBuffers.PBLocation)
}

void PBLocation::SharedCtor() {
  ::memset(&line_, 0, reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&line_) + sizeof(position_));
  _cached_size_ = 0;
}

PBLocation::~PBLocation() {
  // @@protoc_insertion_point(destructor:Lya.ProtocolBuffers.PBLocation)
  SharedDtor();
}

void PBLocation::SharedDtor() {
}

void PBLocation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBLocation::descriptor() {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBLocation& PBLocation::default_instance() {
  protobuf_LyaService_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBLocation* PBLocation::New(::google::protobuf::Arena* arena) const {
  PBLocation* n = new PBLocation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBLocation::Clear() {
// @@protoc_insertion_point(message_clear_start:Lya.ProtocolBuffers.PBLocation)
  ::memset(&line_, 0, reinterpret_cast<char*>(&position_) -
    reinterpret_cast<char*>(&line_) + sizeof(position_));
}

bool PBLocation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Lya.ProtocolBuffers.PBLocation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &line_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 column = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &column_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 position = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Lya.ProtocolBuffers.PBLocation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Lya.ProtocolBuffers.PBLocation)
  return false;
#undef DO_
}

void PBLocation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Lya.ProtocolBuffers.PBLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 line = 1;
  if (this->line() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->line(), output);
  }

  // uint64 column = 2;
  if (this->column() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->column(), output);
  }

  // uint64 length = 3;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->length(), output);
  }

  // uint64 position = 4;
  if (this->position() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->position(), output);
  }

  // @@protoc_insertion_point(serialize_end:Lya.ProtocolBuffers.PBLocation)
}

::google::protobuf::uint8* PBLocation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Lya.ProtocolBuffers.PBLocation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 line = 1;
  if (this->line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->line(), target);
  }

  // uint64 column = 2;
  if (this->column() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->column(), target);
  }

  // uint64 length = 3;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->length(), target);
  }

  // uint64 position = 4;
  if (this->position() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->position(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Lya.ProtocolBuffers.PBLocation)
  return target;
}

size_t PBLocation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Lya.ProtocolBuffers.PBLocation)
  size_t total_size = 0;

  // uint64 line = 1;
  if (this->line() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->line());
  }

  // uint64 column = 2;
  if (this->column() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->column());
  }

  // uint64 length = 3;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  // uint64 position = 4;
  if (this->position() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->position());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBLocation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Lya.ProtocolBuffers.PBLocation)
  GOOGLE_DCHECK_NE(&from, this);
  const PBLocation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBLocation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Lya.ProtocolBuffers.PBLocation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Lya.ProtocolBuffers.PBLocation)
    MergeFrom(*source);
  }
}

void PBLocation::MergeFrom(const PBLocation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Lya.ProtocolBuffers.PBLocation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.line() != 0) {
    set_line(from.line());
  }
  if (from.column() != 0) {
    set_column(from.column());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
  if (from.position() != 0) {
    set_position(from.position());
  }
}

void PBLocation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Lya.ProtocolBuffers.PBLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBLocation::CopyFrom(const PBLocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Lya.ProtocolBuffers.PBLocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBLocation::IsInitialized() const {
  return true;
}

void PBLocation::Swap(PBLocation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBLocation::InternalSwap(PBLocation* other) {
  std::swap(line_, other->line_);
  std::swap(column_, other->column_);
  std::swap(length_, other->length_);
  std::swap(position_, other->position_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBLocation::GetMetadata() const {
  protobuf_LyaService_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_LyaService_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBLocation

// uint64 line = 1;
void PBLocation::clear_line() {
  line_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBLocation::line() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocation.line)
  return line_;
}
void PBLocation::set_line(::google::protobuf::uint64 value) {
  
  line_ = value;
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBLocation.line)
}

// uint64 column = 2;
void PBLocation::clear_column() {
  column_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBLocation::column() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocation.column)
  return column_;
}
void PBLocation::set_column(::google::protobuf::uint64 value) {
  
  column_ = value;
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBLocation.column)
}

// uint64 length = 3;
void PBLocation::clear_length() {
  length_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBLocation::length() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocation.length)
  return length_;
}
void PBLocation::set_length(::google::protobuf::uint64 value) {
  
  length_ = value;
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBLocation.length)
}

// uint64 position = 4;
void PBLocation::clear_position() {
  position_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 PBLocation::position() const {
  // @@protoc_insertion_point(field_get:Lya.ProtocolBuffers.PBLocation.position)
  return position_;
}
void PBLocation::set_position(::google::protobuf::uint64 value) {
  
  position_ = value;
  // @@protoc_insertion_point(field_set:Lya.ProtocolBuffers.PBLocation.position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtocolBuffers
}  // namespace Lya

// @@protoc_insertion_point(global_scope)
